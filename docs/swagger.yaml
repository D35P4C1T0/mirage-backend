definitions:
  models.Album:
    properties:
      createdAt:
        description: Creation timestamp
        type: string
      description:
        description: Optional description
        type: string
      id:
        type: string
      isPrivate:
        description: Privacy setting
        type: boolean
      ownerID:
        description: Album owner
        type: string
      tags:
        description: Tags for categorization
        items:
          type: string
        type: array
      targetUserIDs:
        description: List of users it is shared with
        items:
          type: string
        type: array
      title:
        description: Required album title
        type: string
      updatedAt:
        description: Last updated timestamp
        type: string
    required:
    - title
    type: object
  models.Picture:
    properties:
      albumID:
        description: Album reference
        type: string
      description:
        description: Optional description
        type: string
      facesID:
        description: List of recognized face IDs
        items:
          type: string
        type: array
      height:
        description: Image height in pixels
        type: integer
      id:
        type: string
      pictureDataID:
        description: Picture data reference
        type: string
      thumbnail:
        description: Thumbnail for preview
        items:
          type: integer
        type: array
      uploadedAt:
        description: Upload timestamp
        type: string
      userID:
        description: Uploader reference
        type: string
      width:
        description: Image width in pixels
        type: integer
    type: object
  models.ProfilePicture:
    properties:
      createdAt:
        description: When the profile picture was uploaded
        type: string
      id:
        type: string
      imageData:
        description: Binary profile picture data
        items:
          type: integer
        type: array
      userID:
        description: User associated with this picture
        type: string
    required:
    - userID
    type: object
  models.User:
    properties:
      albumsID:
        description: List of owned albums
        items:
          type: string
        type: array
      createdAt:
        description: User account creation timestamp
        type: string
      email:
        description: Required unique email
        type: string
      id:
        type: string
      password:
        description: Required password
        type: string
      profilePictureID:
        description: Links to the user's profile picture
        type: string
      updatedAt:
        description: Last profile update timestamp
        type: string
      userProfileID:
        description: Links to the user's profile
        type: string
      username:
        description: Required unique username
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /albums:
    get:
      description: Fetches a list of all albums in the database
      produces:
      - application/json
      responses:
        "200":
          description: Albums retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve albums
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieve all albums
      tags:
      - albums
    post:
      consumes:
      - application/json
      description: Creates a new album with the provided details
      parameters:
      - description: Album to create
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/models.Album'
      produces:
      - application/json
      responses:
        "201":
          description: Album created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create album
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new album
      tags:
      - albums
  /albums/{albumId}:
    delete:
      description: Permanently removes an album from the database by its ID
      parameters:
      - description: Album Unique Identifier
        in: path
        name: albumId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Album deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid album ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Album not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete album
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an album
      tags:
      - albums
    get:
      description: Fetches a single album by its unique identifier
      parameters:
      - description: Album Unique Identifier
        in: path
        name: albumId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Album retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid album ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Album not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to retrieve album
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieve a specific album
      tags:
      - albums
    put:
      consumes:
      - application/json
      description: Updates the details of a specific album by its ID
      parameters:
      - description: Album Unique Identifier
        in: path
        name: albumId
        required: true
        type: string
      - description: Album update information
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/models.Album'
      produces:
      - application/json
      responses:
        "200":
          description: Album updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or album ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Album not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update album
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing album
      tags:
      - albums
  /albums/{albumId}/pictures:
    get:
      consumes:
      - application/json
      description: Retrieves all pictures in a specific album
      parameters:
      - description: Album ID
        in: path
        name: albumId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Picture'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get pictures in an album
      tags:
      - pictures
    post:
      consumes:
      - multipart/form-data
      description: Uploads a picture to the database
      parameters:
      - description: Picture file
        in: formData
        name: file
        required: true
        type: file
      - description: Album ID
        in: path
        name: albumId
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Picture'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a picture
      tags:
      - pictures
  /albums/{albumId}/pictures/{pictureId}:
    delete:
      consumes:
      - application/json
      description: Removes a picture's association with a specific album without deleting
        the picture
      parameters:
      - description: Album ID
        in: path
        name: albumId
        required: true
        type: string
      - description: Picture ID
        in: path
        name: pictureId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove picture from album
      tags:
      - pictures
  /albums/search:
    get:
      description: Searches albums by title using case-insensitive partial matching
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Albums retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to search albums
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search albums
      tags:
      - albums
  /albums/user/{userId}:
    get:
      description: Fetches all albums associated with a given user ID
      parameters:
      - description: User Unique Identifier
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Albums retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to retrieve albums
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieve albums for a specific user
      tags:
      - albums
  /pictures:
    get:
      consumes:
      - application/json
      description: Retrieves all pictures from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Picture'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all pictures
      tags:
      - pictures
    post:
      consumes:
      - multipart/form-data
      description: Uploads a picture to the database
      parameters:
      - description: Picture file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Picture'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a picture
      tags:
      - pictures
  /pictures/{pictureId}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific picture by its ID
      parameters:
      - description: Picture ID
        in: path
        name: pictureId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete picture by ID
      tags:
      - pictures
    get:
      consumes:
      - application/json
      description: Retrieves a specific picture by its ID
      parameters:
      - description: Picture ID
        in: path
        name: pictureId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Picture'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get picture by ID
      tags:
      - pictures
  /pictures/{pictureId}/data:
    get:
      consumes:
      - application/json
      description: Retrieves the raw image data of a specific picture
      parameters:
      - description: Picture ID
        in: path
        name: pictureId
        required: true
        type: string
      produces:
      - image/webp
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get picture data
      tags:
      - pictures
  /profilepictures/user/{userId}:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a profile picture to the database
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Profile picture file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ProfilePicture'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a profile picture
      tags:
      - profilepictures
  /users:
    get:
      description: Get all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create user
      tags:
      - users
  /users/{userId}:
    delete:
      description: Delete user account by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user
      tags:
      - users
    get:
      description: Get user profile information by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user profile information by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user profile
      tags:
      - users
swagger: "2.0"
